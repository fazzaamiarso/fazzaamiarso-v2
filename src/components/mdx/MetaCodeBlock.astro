---
import { Icon } from "astro-icon";
import { nanoid } from "nanoid";

const { filename } = Astro.props;

const elementId = nanoid();
---

<code-block id={elementId}>
  <div class='wrap ring-1 ring-zinc-700'>
    <div
      class='flex w-full items-center border-b-[1px] border-zinc-800 px-4 py-1 text-sm text-zinc-300'>
      {filename && <span>{filename}</span>}
      <button
        type='button'
        id={"button" + elementId}
        class='ml-auto inline-block rounded-md bg-[hsl(237,18%,20%)] p-1 ring-2 ring-transparent transition-all hover:ring-primaryDarker'
        ><span class='sr-only'>Copy code</span><Icon
          name='ph:copy-light'
          class='aspect-square w-4'
          id={`copy-${elementId}`}
        /><Icon
          name='ic:baseline-check'
          class='aspect-square w-4 hidden text-green-600'
          id={`check-${elementId}`}
        />
      </button>
    </div>
    <slot />
  </div>
</code-block>

<style lang='scss' is:global>
  .wrap {
    @apply rounded-md bg-[#1a1b26];
    & pre {
      @apply mt-0 rounded-t-none;
    }
    & code {
      background: transparent !important;
      & .line:first-child {
        margin-left: -0.25rem;
      }
    }
  }
</style>

<script>
  class CodeBlock extends HTMLElement {
    constructor() {
      super();

      const id = this.id;
      const copybutton = document.querySelector(`#button${id}`);
      const copyIcon = document.querySelector(`#copy-${id}`);
      const checkIcon = document.querySelector(`#check-${id}`);

      copybutton?.addEventListener("click", () => {
        copyIcon?.classList.add("hidden");
        checkIcon?.classList.remove("hidden");
        setTimeout(() => {
          copyIcon?.classList.remove("hidden");
          checkIcon?.classList.add("hidden");
        }, 1500);
        navigator.clipboard.writeText(this.querySelector("pre code")?.textContent ?? "");
      });
    }
  }

  customElements.define("code-block", CodeBlock);
</script>
