---
import Layout from "layouts/Layout.astro";
import type { BlogFrontmatter } from "types";
import { HOUR_IN_SECONDS } from "utils/constants";
import { getViewsAndLike } from "utils/content";

const _posts = await Astro.glob<BlogFrontmatter>("./*.mdx");
const posts = (
  await Promise.all(
    _posts.map(async (p) => {
      const slug = p.url ?? "";
      const { views, likes } = await getViewsAndLike(slug);

      return {
        title: p.frontmatter.title,
        publishedAt: p.frontmatter.publishedAt,
        description: p.frontmatter.description,
        slug,
        views,
        likes,
      };
    })
  )
).sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());

Astro.response.headers.set("Cache-Control", `max-age=0, s-maxage=${HOUR_IN_SECONDS}`);
---

<Layout title='Blog'>
  <main id='skip-content' class='layout space-y-6 py-12 pb-24'>
    <div class='pb-8'>
      <h1 class='mb-2 text-4xl font-bold text-primary'>Blog</h1>
      <p class='max-w-[60ch] text-lg dark:text-zinc-400'>
        A place where I share my knowldege and learning mostly on Frontend (React), A11Y, and
        sometimes full-stack. Sharing struggles at time.
      </p>
    </div>
    <ul class='space-y-10'>
      {
        posts.map((p) => {
          return (
            <li class='group relative gap-8 rounded-md transition-all'>
              <h2 class='mb-2 text-lg font-medium '>
                <a href={p.slug} class='link-card'>
                  <span class='absolute -inset-5 -z-20 scale-95 rounded-md bg-zinc-100 opacity-0 transition-all group-hover:scale-100 group-hover:opacity-100 dark:bg-zinc-900' />
                  {p.title}
                </a>
              </h2>
              <div class='mb-4 flex items-center gap-4'>
                <span class='text-sm text-zinc-600 dark:text-zinc-400'>
                  {Intl.DateTimeFormat("en-US", { day: "numeric", month: "short" }).format(
                    new Date(p.publishedAt)
                  )}
                </span>
                <span class='text-sm text-zinc-600 dark:text-zinc-400'> {p.views} views</span>
                <span class='text-sm text-zinc-600 dark:text-zinc-400'> {p.likes} likes</span>
              </div>
              <p class='text-zinc-600 dark:text-zinc-400'>{p.description}</p>
            </li>
          );
        })
      }
    </ul>
  </main>
</Layout>